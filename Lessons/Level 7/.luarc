#!/usr/bin/env bash

# Global Debug Mode (set to true for detailed logging, false for quiet)
DEBUG_MODE=false

# Function to print debug messages
print_debug() {
    if [[ "${DEBUG_MODE}" == true ]]; then
        printf "%s\n" "$1"
    fi
}

# Function to print failure messages with thumbs down emoji
print_failure() {
    printf "\U1F44E %s\n" "$1"
}

# Set Lua environment variables
LUAJIT_PATH="/opt/openresty/luajit/bin"
LUA_PATH="/opt/openresty/lualib/?.lua;/opt/openresty/lualib/?/init.lua"
LUA_CPATH="/opt/openresty/lualib/?.so"
LUAROCKS_BIN="${HOME}/.luarocks/bin"
LUAROCKS_SHARE="${HOME}/.luarocks/share/lua/5.1/?.lua;${HOME}/.luarocks/share/lua/5.1/?/init.lua"
LUAROCKS_LIB="${HOME}/.luarocks/lib/lua/5.1/?.so"

# Update PATH
if [[ -d "${LUAJIT_PATH}" ]]; then
    if [[ ":${PATH}:" != *":${LUAJIT_PATH}:"* ]]; then
        export PATH="${LUAJIT_PATH}:${PATH}"
        print_debug "[DEBUG] Added LUAJIT_PATH to PATH: ${LUAJIT_PATH}"
    fi
else
    print_failure "LUAJIT_PATH not found: ${LUAJIT_PATH}"
fi

# Set LUA_PATH
if [[ -n "${LUA_PATH}" ]]; then
    export LUA_PATH="${LUA_PATH}"
    print_debug "[DEBUG] Set LUA_PATH: ${LUA_PATH}"
else
    print_failure "Failed to set LUA_PATH"
fi

# Set LUA_CPATH
if [[ -n "${LUA_CPATH}" ]]; then
    export LUA_CPATH="${LUA_CPATH}"
    print_debug "[DEBUG] Set LUA_CPATH: ${LUA_CPATH}"
else
    print_failure "Failed to set LUA_CPATH"
fi

# Update PATH for LuaRocks
if [[ -d "${LUAROCKS_BIN}" ]]; then
    if [[ ":${PATH}:" != *":${LUAROCKS_BIN}:"* ]]; then
        export PATH="${LUAROCKS_BIN}:${PATH}"
        print_debug "[DEBUG] Added LUAROCKS_BIN to PATH: ${LUAROCKS_BIN}"
    fi
else
    print_failure "LUAROCKS_BIN not found: ${LUAROCKS_BIN}"
fi

# Set LUA_PATH for LuaRocks
if [[ -n "${LUAROCKS_SHARE}" ]]; then
    export LUA_PATH="${LUAROCKS_SHARE};${LUA_PATH}"
    print_debug "[DEBUG] Updated LUA_PATH with LuaRocks share: ${LUAROCKS_SHARE}"
else
    print_failure "Failed to update LUA_PATH with LuaRocks share"
fi

# Set LUA_CPATH for LuaRocks
if [[ -n "${LUAROCKS_LIB}" ]]; then
    export LUA_CPATH="${LUAROCKS_LIB};${LUA_CPATH}"
    print_debug "[DEBUG] Updated LUA_CPATH with LuaRocks lib: ${LUAROCKS_LIB}"
else
    print_failure "Failed to update LUA_CPATH with LuaRocks lib"
fi

# Final debug output if DEBUG_MODE is enabled
if [[ "${DEBUG_MODE}" == true ]]; then
    printf "[DEBUG] Final Lua environment configuration:\n"
    printf "[DEBUG] LUAJIT_PATH: %s\n" "${LUAJIT_PATH}"
    printf "[DEBUG] LUA_PATH: %s\n" "${LUA_PATH}"
    printf "[DEBUG] LUA_CPATH: %s\n" "${LUA_CPATH}"
    printf "[DEBUG] PATH: %s\n" "${PATH}"
fi
