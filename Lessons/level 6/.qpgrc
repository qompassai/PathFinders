#!/usr/bin/env bash

DEBUG_MODE=false

# Qompass Privacy Guard (QPG)
GNUPGHOME="${HOME}/.gnupg"
export GNUPGHOME

# Set TTY for GPG
GPG_TTY=$(tty)
export GPG_TTY
export PINENTRY_USER_DATA="USE_TTY=1"

# Debug Logging Function
log_debug() {
    if [[ "${DEBUG_MODE}" == true ]]; then
        printf "[%s] %s\n" "$(date '+%Y-%m-%d %H:%M:%S')" "$@"
    fi
}

# Ensure required binaries are available
command -v gpg-agent >/dev/null 2>&1 || {
    log_debug "Error: gpg-agent not found. Exiting."
    exit 1
}

command -v gnome-keyring-daemon >/dev/null 2>&1 || {
    log_debug "Error: gnome-keyring-daemon not found. Exiting."
    exit 1
}

# Start GNOME Keyring Daemon
if ! pgrep -f gnome-keyring-daemon >/dev/null; then
    eval $(gnome-keyring-daemon --start --components=pkcs11,secrets,ssh) || {
        log_debug "Error: Failed to start GNOME Keyring Daemon. Exiting."
        exit 1
    }
    log_debug "Started GNOME Keyring Daemon."
else
    log_debug "GNOME Keyring Daemon is already running."
fi

# Handle ssh-agent
if pgrep -x ssh-agent >/dev/null; then
    log_debug "Info: ssh-agent is already running. Killing it to avoid conflicts."
    pkill ssh-agent
fi

# Start gpg-agent if not running
if pgrep -x gpg-agent >/dev/null; then
    log_debug "Info: gpg-agent is already running. Skipping start."
else
    eval $(gpg-agent --daemon --enable-ssh-support)
    log_debug "Started gpg-agent."
fi

# SSH Agent Configuration
agent_ssh_socket=$(gpgconf --list-dirs agent-ssh-socket)
if [[ -S "${agent_ssh_socket}" ]]; then
    SSH_AUTH_SOCK="${agent_ssh_socket}"
    export SSH_AUTH_SOCK
    log_debug "SSH_AUTH_SOCK set to ${agent_ssh_socket}"
else
    log_debug "Error: SSH agent socket not found at ${agent_ssh_socket}. Exiting."
    exit 1
fi

# Check if gpg-agent supports SSH and warn if not
if ! gpg-connect-agent "GETINFO ssh_socket_name" /bye >/dev/null 2>&1; then
    log_debug "Warning: gpg-agent does not support SSH. Make sure it's properly configured."
fi

# Reload gpg-agent
gpg-connect-agent reloadagent /bye >/dev/null 2>&1
gpg-connect-agent updatestartuptty /bye >/dev/null 2>&1
log_debug "Reloaded gpg-agent and updated startup TTY."

# Dirmngr setup (optional)
export DIRMNGR_INFO="/run/user/$(id -u)/gnupg/S.dirmngr"
log_debug "DIRMNGR_INFO set to ${DIRMNGR_INFO}"

# Set GNOME Keyring environment variables
export GNOME_KEYRING_CONTROL="/run/user/$(id -u)/keyring"
export GNOME_KEYRING_PID=$(pgrep -f gnome-keyring-daemon)
log_debug "GNOME_KEYRING_CONTROL set to ${GNOME_KEYRING_CONTROL}"
log_debug "GNOME_KEYRING_PID set to ${GNOME_KEYRING_PID}"

# Print Debug Info if Enabled
log_debug "SSH_AUTH_SOCK: ${SSH_AUTH_SOCK}"
log_debug "GPG_TTY: ${GPG_TTY}"
log_debug "GNUPGHOME: ${GNUPGHOME}"
#log_debug "TPM2_CTX_PATH: ${TPM2_CTX_PATH}"
#log_debug "TPM2_PKCS11_DB: ${TPM2_PKCS11_DB}"

# Ensure Correct Permissions
chmod 600 /run/user/$(id -u)/gnupg/S.* || {
    log_debug "Error: Failed to set permissions on GPG sockets."
    exit 1
}
log_debug "Permissions set on GPG sockets."


